syntax = "proto3";

package Order_v1;
import "google/protobuf/timestamp.proto";
import "annotations.proto";
option go_package = "/order;order";



// User Flow 
// 1. User creates a cart
// 2. user Checkout the cart
// 3. Cart_uuid is snet to the Paymment Service 
// 4. Payment servic calls the cart and validates and locks the cart
// 5. Payment servic sends mess to order service with the cart_uuid 
// 6. Order service Validates the cart and creates the order

// Store Flow
// 2. store creates a cart
// 3. store adds items to the cart
// 4. store checks out the cart
// 5. store Calls order sevice with cart_uuid
// 6. Order service validates the cart and creates the order

// or 

// Store Flow
// 2. store creates a cart
// 3. store adds items to the cart
// 4. store checks out the cart
// 5. store Calls payment_service with cart_uuid and payment_method as cash
// 6. Payment service validates the cart and creates the order
// 7. Payment service sends message to order service with the cart_uuid
// 8. Order service validates the cart and creates the order


// Service Definition
service OrderService {
    rpc CreateOrder (CreateOrderRequest) returns (StoreOrderResponse)
    {
        option (google.api.http) = {
            post: "/order/store/{store_uuid}/user/{user_phone_no}"
            body: "*"
        };
    };

    rpc GetOrder (GetOrderRequest) returns (StoreOrderResponse){
        option (google.api.http) = {
            get: "/order/store/{store_uuid}/user/{user_phone_no}/{order_uuid}"
        };
    };

    rpc CancelOrder (DeleteOrderRequest) returns (StoreOrderResponse){
        option (google.api.http) = {
            put: "/order/store/{store_uuid}/user/{user_phone_no}/{order_uuid}/cancel"
            body: "*"
        };
    };
    rpc ListOrder (ListOrderRequest) returns (ListStoreOrderResponse){
        option (google.api.http) = {
            get: "/order/store/{store_uuid}/"
        };
    };

    rpc GetUserOrder (GetUserOrderRequest) returns (UserOrderResponse){
        option (google.api.http) = {
            get: "/order/user/{user_phone_no}/store/{store_uuid}/{order_uuid}"
        };
    };

    rpc listUserOrder (ListUserOrderRequest) returns (ListUserOrderResponse){
        option (google.api.http) = {
            get: "/order/user/{user_phone_no}/store/{store_uuid}"
        };
    };
}

// Enums
enum OrderState {
    ORDER_STATE_UNSPECIFIED = 0;
    ORDER_STATE_PAYMENT_PENDING = 1;
    ORDER_STATE_PLACED = 2;
    ORDER_STATE_PREPARING = 3;
    ORDER_STATE_READY = 4;
    ORDER_STATE_COMPLETED = 5;
    ORDER_STATE_CANCELED = 6;
}

enum PaymentState {
    PAYMENT_STATE_UNSPECIFIED = 0;
    PAYMENT_STATE_PENDING = 1;
    PAYMENT_STATE_COMPLETE = 2;
    PAYMENT_STATE_FAILED = 3;
    PAYMENT_STATE_REFUNDED = 4;
}

enum PaymentMethod {
    PAYMENT_METHOD_UNSPECIFIED = 0;
    PAYMENT_METHOD_RAZORPAY = 1;
    PAYMENT_METHOD_CASH = 2;
    PAYMENT_METHOD_CARD = 3;
    PAYMENT_METHOD_UPI = 4;
    PAYMENT_METHOD_NETBANKING = 5;
}

enum OrderType {
    ORDER_TYPE_UNSPECIFIED = 0;
    ORDER_TYPE_DINE_IN = 1;
    ORDER_TYPE_TAKE_AWAY = 2;
    ORDER_TYPE_DRIVE_THRU = 3;
}

// Messages
message OrderStoreView {
    string order_uuid = 1;        // Primary key
    string public_so = 2;         // Public order number
    string store_uuid = 3;
    string user_phone_no = 4;
    OrderType order_type = 5;
    optional string table_no = 6;
    optional string vehicle_no = 7;
    optional string vehicle_description = 8;
    optional string coupon_code = 9;
    repeated OrderItem items = 10;
    string special_instructions = 11;
    OrderState order_status = 12;
    OrderPayment payment = 13;

    // Financial fields
    float subtotal_amount = 15;
    float discount_amount = 16;
    float price_before_tax = 17;
    float tax_amount = 18;
    float packaging_cost = 19;
    float final_amount = 20;       // Added from model property

    google.protobuf.Timestamp created_at = 22;
    google.protobuf.Timestamp updated_at = 23;
    string cart_uuid = 24;
}

message OrderUserView {
    string order_uuid = 1;        // Primary key
    string public_so = 2;         // Public order number
    string store_uuid = 3;
    string cart_uuid = 4;
    string user_phone_no = 5;
    OrderType order_type = 6;
    string table_no = 7;
    string vehicle_no = 8;
    string vehicle_description = 9;
    string coupon_code = 10;
    string speacial_instructions = 11;
    repeated OrderItem items = 12;

    float total_subtotal = 13; //Sum of all the total amounts of a 
    float total_discount = 14;
    float total_price_before_tax = 15;
    float total_tax = 16;
    float packaging_cost = 17;
    float final_amount = 18; //Sum of all the final amounts of all the items in the cart.

    google.protobuf.Timestamp created_at = 22;
    google.protobuf.Timestamp updated_at = 23;
}

message OrderItem {
    string item_uuid = 1;
    string product_name =2;
    string product_uuid = 3;
    float tax_percentage = 4;

    float unit_price = 5; //Price of a single unit of the item (before any discount or tax).
    int32 quantity  = 6; //Number of units of the item in the cart.
    float add_ons_total =7;
    float subtotal_amount = 8; //unit_price * quantity (total before discounts and tax).
    float discount_amount = 9; //Discount applied to this specific item.
    float price_before_tax  = 10; //(subtotal_amount - discount_amount).
    float tax_amount = 11; //Tax applied to the item.
    float final_price = 12; //price_before_tax + tax_amount (final amount for the item).
    
    float packaging_cost = 13; //Price for Packaging if required

    repeated OrderItemAddOn add_ons =14;
}

message OrderItemAddOn {
    string add_on_name = 1;
    string add_on_uuid = 2;
    int32 quantity = 3;
    float unit_price = 4;
    bool is_free = 5;
}

// Payment & History (if needed for responses)
message OrderPayment {
    string payment_uuid = 1;
    optional string rz_order_uuid = 2;
    optional string rz_payment_uuid = 3;
    optional string rz_signature = 4;
    float amount = 5;
    PaymentState payment_status = 6;
    PaymentMethod payment_method = 7;
    string notes = 8;

    google.protobuf.Timestamp payment_time = 9;
}



// Request/Response Structures
message CreateOrderRequest {
    string store_uuid = 1;
    string user_phone_no = 2;
    string cart_uuid = 3;
}

message GetUserOrderRequest {
    string order_uuid = 1;
    string store_uuid = 2;
    string user_phone_no = 3;
}

message UserOrderResponse {
    OrderUserView order = 1;
}
message StoreOrderResponse {
    OrderStoreView order = 1;
}
message ListUserOrderRequest {
    string store_uuid = 1;
    string user_phone_no = 2;
    int32 limit = 3;
    int32 page = 4;
}

message ListUserOrderResponse {
    repeated OrderUserView orders = 1;
    int32 next_page = 2;
    int32 prev_page = 3;
}

message OrderResponse {;
    OrderStoreView order = 1;
}

message GetOrderRequest {
    string order_uuid = 1;
    string store_uuid = 2;
    string user_phone_no = 3;
}

message UpdateOrderRequest {
    string order_uuid = 1;
    string store_uuid = 2;
    string user_phone_no = 3;
    OrderStoreView order = 4;
}

message DeleteOrderRequest {
    string order_uuid = 1;
    string store_uuid = 2;
    string user_phone_no = 3;
}

message ListOrderRequest {
    string store_uuid = 1;
    string user_phone_no = 2;
    int32 limit = 3;
    int32 page = 4;
}

message ListOrderResponse {
    repeated OrderStoreView orders = 1;
    int32 next_page = 2;
    int32 prev_page = 3;
}

message Empty {}